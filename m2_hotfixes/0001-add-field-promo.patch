From 1725071a92228c34383a12e116a5a928a01d349a Mon Sep 17 00:00:00 2001
From: ferripradana <pradanaferri@gmail.com>
Date: Thu, 19 Nov 2020 07:12:11 +0700
Subject: [PATCH] add field promo

---
 .../PromoShipping/Model/Quote/RateRequest.php |  10 +-
 .../AvailableShippingMethods.php              | 130 ++++++++++++++++++
 .../Icube/PromoShipping/Plugin/Converter.php  |   3 +-
 app/code/Icube/PromoShipping/etc/di.xml       |   1 +
 .../etc/extension_attributes.xml              |   2 +-
 .../Icube/PromoShipping/etc/schema.graphqls   |   3 +
 6 files changed, 145 insertions(+), 4 deletions(-)
 create mode 100644 app/code/Icube/PromoShipping/Model/Resolver/ShippingAddress/AvailableShippingMethods.php
 create mode 100644 app/code/Icube/PromoShipping/etc/schema.graphqls

diff --git a/app/code/Icube/PromoShipping/Model/Quote/RateRequest.php b/app/code/Icube/PromoShipping/Model/Quote/RateRequest.php
index 9e5676193..d12cd8d82 100644
--- a/app/code/Icube/PromoShipping/Model/Quote/RateRequest.php
+++ b/app/code/Icube/PromoShipping/Model/Quote/RateRequest.php
@@ -124,9 +124,17 @@ namespace Icube\PromoShipping\Model\Quote;
         $om = \Magento\Framework\App\ObjectManager::getInstance();
         $salesRule = $om->get("Magento\SalesRule\Model\Rule");
         $cartObj = $om->get('\Magento\Checkout\Model\Cart');   
+        $quote = $om->get('\Magento\Quote\Model\Quote');   
 
         $quoteId = $cartObj->getQuote()->getId();
-        $getAppliedRuleIds = $cartObj->getQuote()->getAppliedRuleIds();
+        foreach($this->getAllItems() as $item){
+            $quoteId = $item->getQuoteId();
+            break;
+        }
+
+        $quote = $quote->load($quoteId);
+
+        $getAppliedRuleIds = $quote->getAppliedRuleIds();
         $appliedRuleIds = explode(",",$getAppliedRuleIds);
 
         $arrRule = [];
diff --git a/app/code/Icube/PromoShipping/Model/Resolver/ShippingAddress/AvailableShippingMethods.php b/app/code/Icube/PromoShipping/Model/Resolver/ShippingAddress/AvailableShippingMethods.php
new file mode 100644
index 000000000..d1f152ac3
--- /dev/null
+++ b/app/code/Icube/PromoShipping/Model/Resolver/ShippingAddress/AvailableShippingMethods.php
@@ -0,0 +1,130 @@
+<?php
+/**
+ * Copyright Â© Magento, Inc. All rights reserved.
+ * See COPYING.txt for license details.
+ */
+declare(strict_types=1);
+
+namespace Icube\PromoShipping\Model\Resolver\ShippingAddress;
+
+use Magento\Directory\Model\Currency;
+use Magento\Framework\Api\ExtensibleDataObjectConverter;
+use Magento\Framework\Exception\LocalizedException;
+use Magento\Framework\Exception\NoSuchEntityException;
+use Magento\Framework\GraphQl\Config\Element\Field;
+use Magento\Framework\GraphQl\Query\ResolverInterface;
+use Magento\Framework\GraphQl\Schema\Type\ResolveInfo;
+use Magento\Quote\Api\Data\ShippingMethodInterface;
+use Magento\Quote\Model\Cart\ShippingMethodConverter;
+use Magento\Store\Api\Data\StoreInterface;
+
+/**
+ * @inheritdoc
+ */
+class AvailableShippingMethods implements ResolverInterface
+{
+    /**
+     * @var ExtensibleDataObjectConverter
+     */
+    private $dataObjectConverter;
+
+    /**
+     * @var ShippingMethodConverter
+     */
+    private $shippingMethodConverter;
+
+    /**
+     * @param ExtensibleDataObjectConverter $dataObjectConverter
+     * @param ShippingMethodConverter $shippingMethodConverter
+     */
+    public function __construct(
+        ExtensibleDataObjectConverter $dataObjectConverter,
+        ShippingMethodConverter $shippingMethodConverter
+    ) {
+        $this->dataObjectConverter = $dataObjectConverter;
+        $this->shippingMethodConverter = $shippingMethodConverter;
+    }
+
+    /**
+     * @inheritdoc
+     */
+    public function resolve(Field $field, $context, ResolveInfo $info, array $value = null, array $args = null)
+    {
+        if (!isset($value['model'])) {
+            throw new LocalizedException(__('"model" values should be specified'));
+        }
+        $address = $value['model'];
+
+        // Allow shipping rates by setting country id for new addresses
+        if (!$address->getCountryId() && $address->getCountryCode()) {
+            $address->setCountryId($address->getCountryCode());
+        }
+
+        $address->setCollectShippingRates(true);
+        $address->collectShippingRates();
+        $cart = $address->getQuote();
+
+        $methods = [];
+        $shippingRates = $address->getGroupedAllShippingRates();
+        foreach ($shippingRates as $carrierRates) {
+            foreach ($carrierRates as $rate) {
+                $methodData = $this->dataObjectConverter->toFlatArray(
+                    $this->shippingMethodConverter->modelToDataObject($rate, $cart->getQuoteCurrencyCode()),
+                    [],
+                    ShippingMethodInterface::class
+                );
+                $methods[] = $this->processMoneyTypeData(
+                    $methodData,
+                    $cart->getQuoteCurrencyCode()
+                );
+            }
+        }
+
+        $writer = new \Zend\Log\Writer\Stream(BP . '/var/log/xbro.log');
+        $logger = new \Zend\Log\Logger();
+        $logger->addWriter($writer);
+
+        $logger->info($methods);
+
+
+        return $methods;
+    }
+
+    /**
+     * Process money type data
+     *
+     * @param array $data
+     * @param string $quoteCurrencyCode
+     * @return array
+     * @throws NoSuchEntityException
+     */
+    private function processMoneyTypeData(array $data, string $quoteCurrencyCode): array
+    {
+        $amount = $data['amount']; 
+        if (isset($data['amount'])) {
+            $data['amount'] = ['value' => $data['amount'], 'currency' => $quoteCurrencyCode];
+        }
+
+        if (empty($data['shipping_promo_name'])) {
+            $data['shipping_promo_name'] = '';
+        }
+
+        if (empty($data['original_amount'])) {
+            $data['price_incl_tax'] =  ['value' => $data['amount'], 'currency' => $quoteCurrencyCode];
+        }else{
+            $data['price_incl_tax'] =  ['value' => $data['original_amount'], 'currency' => $quoteCurrencyCode];
+        }
+
+        /** @deprecated The field should not be used on the storefront */
+        $data['base_amount'] = null;
+
+        if (isset($data['price_excl_tax'])) {
+            $data['price_excl_tax'] = ['value' => $data['price_excl_tax'], 'currency' => $quoteCurrencyCode];
+        }
+
+        // if (isset($data['price_incl_tax'])) {
+        //     $data['price_incl_tax'] = ['value' => $data['price_incl_tax'], 'currency' => $quoteCurrencyCode];
+        // }
+        return $data;
+    }
+}
diff --git a/app/code/Icube/PromoShipping/Plugin/Converter.php b/app/code/Icube/PromoShipping/Plugin/Converter.php
index fd24c59d4..d2333d76a 100644
--- a/app/code/Icube/PromoShipping/Plugin/Converter.php
+++ b/app/code/Icube/PromoShipping/Plugin/Converter.php
@@ -35,8 +35,7 @@ class Converter
                         $extensibleAttribute->setShippingPromoName($arrRateDescription[1]);
                     }
                     if(isset($arrRateDescription[2])){
-                        $formattedCurrencyValue = $this->_priceHelper->currency($arrRateDescription[2],true,false);
-                        $extensibleAttribute->setShippingOriginalPrice($formattedCurrencyValue);
+                        $extensibleAttribute->setOriginalAmount($arrRateDescription[2]);
                     }
                 }
             }
diff --git a/app/code/Icube/PromoShipping/etc/di.xml b/app/code/Icube/PromoShipping/etc/di.xml
index c400fc27c..8cce696b9 100644
--- a/app/code/Icube/PromoShipping/etc/di.xml
+++ b/app/code/Icube/PromoShipping/etc/di.xml
@@ -9,4 +9,5 @@
     <type name="Magento\Quote\Model\Cart\ShippingMethodConverter">
         <plugin name="RatePromoIcube" type="Icube\PromoShipping\Plugin\Converter" sortOrder="1" />
    </type>
+   <preference for="Magento\QuoteGraphQl\Model\Resolver\ShippingAddress\AvailableShippingMethods" type="Icube\PromoShipping\Model\Resolver\ShippingAddress\AvailableShippingMethods" />
 </config>
\ No newline at end of file
diff --git a/app/code/Icube/PromoShipping/etc/extension_attributes.xml b/app/code/Icube/PromoShipping/etc/extension_attributes.xml
index 7c1f24420..0f17765c7 100644
--- a/app/code/Icube/PromoShipping/etc/extension_attributes.xml
+++ b/app/code/Icube/PromoShipping/etc/extension_attributes.xml
@@ -10,6 +10,6 @@
         <attribute code="shipping_promo_name" type="string" />
     </extension_attributes>
     <extension_attributes for="Magento\Quote\Api\Data\ShippingMethodInterface">
-        <attribute code="shipping_original_price" type="string" />
+        <attribute code="original_amount" type="int" />
     </extension_attributes>
 </config>
diff --git a/app/code/Icube/PromoShipping/etc/schema.graphqls b/app/code/Icube/PromoShipping/etc/schema.graphqls
new file mode 100644
index 000000000..51ac8b6d6
--- /dev/null
+++ b/app/code/Icube/PromoShipping/etc/schema.graphqls
@@ -0,0 +1,3 @@
+type AvailableShippingMethod {
+    shipping_promo_name: String!
+}
\ No newline at end of file
-- 
2.20.1

